- name: Ensure bash, OpenSSl, and libssl are the latest versions
  apt: name={{ item }} update_cache=true state=latest
  with_items:
    - bash
    - openssl
    - libssl-dev
    - libssl-doc
  tags: packages

- name: Install PostgreSQL
  apt: name={{ item }} update_cache=true state=latest
  with_items:
    - postgresql
    - postgresql-contrib
    - libpq-dev
    - python3-psycopg2
  tags: packages

- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=started enabled=yes

- name: Ensure database is created
  become_user: postgres
  postgresql_db: name={{ db_name }}
             encoding='UTF-8'
             template='template0'
             state=present

- name: Ensure user has access to the database
  become_user: postgres
  postgresql_user: db={{ db_name }}
               name={{ db_user }}
               password={{ db_password }}
               priv=ALL
               state=present

- name: Ensure user does not have unnecessary privileges
  become_user: postgres
  postgresql_user: name={{ db_user }}
               role_attr_flags=NOSUPERUSER,NOCREATEDB
               state=present

- name: Enable inbound network connections from 10.231.0.0/16
  firewalld:
    source: 10.231.0.0/16
    permanent: yes
    state: enabled

- name: Enable inbound postgresql network connections
  firewalld:
    port: 5432/tcp
    permanent: yes
    state: enabled

- name: Create Keypair
  openssh_keypair:
    path: ~/.ssh/id_rsa

- name: Disable empty password login
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: '^#?PermitEmptyPasswords'
    line: 'PermitEmptyPasswords no'
  notify: restart sshd

- name: Disable remote root login
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin no'
  notify: restart sshd

- name: Disable password login
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: '^(#\s*)?PasswordAuthentication '
    line: 'PasswordAuthentication no'
  notify: restart sshd

- name: Enable PAM
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: '^#?UsePAM'
    line: 'UsePAM yes'
  notify: restart sshd
